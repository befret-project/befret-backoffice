name: 🔄 Continuous Integration

on:
  push:
    branches: [ develop, staging, main ]
  pull_request:
    branches: [ develop, staging, main ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-type-check:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🔍 Type check
        run: npm run type-check

  build-test:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      matrix:
        environment: [development, staging, production]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for ${{ matrix.environment }}
        run: |
          if [ "${{ matrix.environment }}" = "development" ]; then
            npm run build
          elif [ "${{ matrix.environment }}" = "staging" ]; then
            npm run build:staging
          else
            npm run build:production
          fi

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.environment }}
          path: .next/
          retention-days: 7

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate

      - name: 🔒 Check for vulnerabilities
        run: |
          # Fail if high or critical vulnerabilities are found
          npm audit --audit-level=high